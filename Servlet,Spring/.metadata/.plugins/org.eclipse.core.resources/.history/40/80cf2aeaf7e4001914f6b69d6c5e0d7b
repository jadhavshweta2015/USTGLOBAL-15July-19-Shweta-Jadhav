package com.ustglobal.ustspringmvc.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttribute;

import com.ustglobal.ustspringmvc.dto.Employee;
import com.ustglobal.ustspringmvc.service.EmployeeService;

@Controller
@RequestMapping("/employee")
public class EmployeeController {
	@Autowired
	private EmployeeService service;
	
//	@RequestMapping(path="/login",method=RequestMethod.GET)
	
	
	@GetMapping("login")//same as RequestMapping
	public String LoginPage(ModelMap map) {
		return "login";
	}
	
	@GetMapping("register")
	public String registerPage() {
		return "register";
	}
	
	@PostMapping("/login")
	public String login(String email,String password,ModelMap map,HttpServletRequest req) {
		Employee employee=service.auth(email, password);
		if(employee==null) {
			map.addAttribute("msg", "Invalid Credentials");
			return "false";
		}
		req.getSession().setAttribute("emp", employee);
		return "home";
	}
	
	@PostMapping("/register")
	public String register(Employee employee,ModelMap map) {
		if(service.register(employee)) {
			map.addAttribute("msg", "Registered employee successfully");
		}else {
			map.addAttribute("msg", "Invalid data");
		}
		return "login";
	}
	
	@GetMapping("/home")
	public String homePage() {
		return "home";
	}
	
	@GetMapping("/update")
	public String updatePage() {
		return "update";
	}
	
	@PostMapping("/update")
	public String update(Employee employee,@SessionAttribute("emp")Employee emp,ModelMap map) {
		employee.setEmail(emp.getEmail());
		if(service.update(employee)) {
			map.addAttribute("msg","updated profile");
		}else {
			map.addAttribute("msg","Invalid data");
		}
		return "home";
	}
	
	@GetMapping("/show-all")
	public String showAll(ModelMap map) {
		List<Employee> employees= service.getAllEmployee();
		map.addAttribute("list", employees);
		return "show-all";
	}
	
	@GetMapping("/delete")
	public String delete(@RequestParam("id")int id,ModelMap map) {
		service.deleteEmployee(id);
		map.addAttribute("msg","profile delete");
		return "login";
	}
	
	@GetMapping("/logout")
	public String logout(HttpSession session,ModelMap map) {
		session.invalidate();
		map.addAttribute("msg","Logout Successfully");
		return "login";
	}

}
