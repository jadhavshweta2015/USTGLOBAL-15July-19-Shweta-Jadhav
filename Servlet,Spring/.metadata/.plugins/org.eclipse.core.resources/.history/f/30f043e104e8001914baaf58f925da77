package com.ustglobal.ustspringboot.controller;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ustglobal.ustspringboot.dto.Employee;
import com.ustglobal.ustspringboot.dto.EmployeeResponse;
import com.ustglobal.ustspringboot.service.EmployeeService;

@RestController
@RequestMapping("/employee")
public class EmployeeController {

	@Autowired
	@Qualifier("jpa")
	private EmployeeService service;
	
	@GetMapping(path="/get",produces=MediaType.APPLICATION_JSON_VALUE)
	public EmployeeResponse getEmployee(@RequestParam("id")int id) {
		Employee emp=service.getEmployee(id);
		EmployeeResponse response=new EmployeeResponse();
		if(emp==null) {
			 response.setStatusCode(401);
			 response.setMessage("Failure");
			 response.setDescription("data not found");
		 }else {
			 response.setStatusCode(201);
			 response.setMessage("success");
			 response.setDescription("data found");
			 response.setEmployee(Arrays.asList(emp));
		}
		return response;
	}
	
	@GetMapping(path="/get-all",produces=MediaType.APPLICATION_JSON_VALUE)
	public EmployeeResponse getAllEmployee() {
		List<Employee> emp=service.getAllEmployee();
		EmployeeResponse response=new EmployeeResponse();
		if(emp==null) {
			 response.setStatusCode(401);
			 response.setMessage("Failure");
			 response.setDescription("data not found");
		 }else {
			 response.setStatusCode(201);
			 response.setMessage("success");
			 response.setDescription("data found");
			 response.setEmployee(emp);
		}
		return response;
	}
	
	@GetMapping(path="/get-all-name",produces=MediaType.APPLICATION_JSON_VALUE)
	public EmployeeResponse getAllEmployeesByName(@RequestParam("name")String name) {
		List<Employee> emp=service.getEmployeesByName(name);
		EmployeeResponse response=new EmployeeResponse();
		if(emp==null) {
			 response.setStatusCode(401);
			 response.setMessage("Failure");
			 response.setDescription("data not found");
		 }else {
			 response.setStatusCode(201);
			 response.setMessage("success");
			 response.setDescription("data found");
			 response.setEmployee(emp);
		}
		return response;
	}
	
	
	@PostMapping(path="/add",produces=MediaType.APPLICATION_JSON_VALUE,consumes=MediaType.APPLICATION_JSON_VALUE)
	public EmployeeResponse addEmployee(@RequestBody Employee employee) {
		EmployeeResponse response=new EmployeeResponse();
		 if(service.addEmployee(employee)) {
			 response.setStatusCode(201);
			 response.setMessage("success");
			 response.setDescription("data added");
		 }else {
			 response.setStatusCode(401);
			 response.setMessage("Failure");
			 response.setDescription("data not added");
		 }
		return response;
	}
	
	@PutMapping(path="/modify",produces=MediaType.APPLICATION_JSON_VALUE,consumes=MediaType.APPLICATION_JSON_VALUE)
	public EmployeeResponse modifyEmployee(@RequestBody Employee employee) {
		EmployeeResponse response=new EmployeeResponse();
		 if(service.modifyEmployee(employee)) {
			 response.setStatusCode(201);
			 response.setMessage("success");
			 response.setDescription("data modify successfully");
		 }else {
			 response.setStatusCode(401);
			 response.setMessage("Failure");
			 response.setDescription("data not modify");
		 }
		return response;
	}
	
	@DeleteMapping(path="/remove/{id}",produces=MediaType.APPLICATION_JSON_VALUE)
	public EmployeeResponse removeEmployee(@PathVariable("id")int id) {
		EmployeeResponse response=new EmployeeResponse();
		 if(service.removeEmployee(id)) {
			 response.setStatusCode(201);
			 response.setMessage("success");
			 response.setDescription("data remove successfully");
		 }else {
			 response.setStatusCode(401);
			 response.setMessage("Failure");
			 response.setDescription("data not remove");
		 }
		return response;
	}
	
	
	public String throwException() throws Exception {
		throw new Exception();
		return null;
	}
}
